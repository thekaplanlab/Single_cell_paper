colnames(genelist2)<-paste0(colnamex, collapse = "_")
last_list<-cbindX(last_list, genelist2)
}
return(last_list)
}
else {
genes1<-data.table(genes1)
genelist<-genes1[, ..colname]
collist<-c(colnames(genes1))
collist<-collist[-which(collist %in% colname)]
genelist1<-Reduce(intersect, genelist)
for (i in collist){
if (length(colname) < 2){
genelist<-genelist[!which(genelist[[colname]] %in% genes1[[i]]),]
}
else {
genelist1<-genelist1[!(genelist1 %in% genes1[[i]])]
}
}
genelist1<-data.frame(commons = genelist1, stringsAsFactors = FALSE)
}
return(
if (missing(colname)){
last_list
}
else if (length(colname)<2) {
genelist
}
else {genelist1}
)
}
heyhey<-commonUnique(all1)
View(heyhey)
commonUnique <- function(genes1, colname){
if (missing(colname)){
n<-length(genes1)
lst<-lapply(0:(2^n-1), FUN=function(x) head(as.integer(intToBits(x)),n))
lst<-lst[-1]
colnamex<-colnames(genes1)
last_list<-data.frame(c(1,2,3))
ref2<-seq(1:length(genes1))
for (i in 1:length(lst)){
ref<-unlist(lst[[i]])
refx<-ref*ref2
colname<-colnamex[refx]
genes1<-data.table(genes1)
genelist<-genes1[, ..colname]
collist<-c(colnames(genes1))
collist<-collist[-which(collist %in% colname)]
genelist1<-Reduce(intersect, genelist)
for (i in collist){
if (length(colname) < 2){
genelist<-genelist[!which(genelist[[colname]] %in% genes1[[i]]),]
}
else {
genelist1<-genelist1[!(genelist1 %in% genes1[[i]])]
}
}
genelist1<-data.frame(commons = genelist1, stringsAsFactors = FALSE)
if (length(colname)<2) {
genelist<-data.frame(genelist, stringsAsFactors = FALSE)
genelist2<-genelist
}
else {genelist2<-genelist1}
colnames(genelist2)<-paste0(colname, collapse = "_")
last_list<-cbindX(last_list, genelist2)
}
return(last_list)
}
else {
genes1<-data.table(genes1)
genelist<-genes1[, ..colname]
collist<-c(colnames(genes1))
collist<-collist[-which(collist %in% colname)]
genelist1<-Reduce(intersect, genelist)
for (i in collist){
if (length(colname) < 2){
genelist<-genelist[!which(genelist[[colname]] %in% genes1[[i]]),]
}
else {
genelist1<-genelist1[!(genelist1 %in% genes1[[i]])]
}
}
genelist1<-data.frame(commons = genelist1, stringsAsFactors = FALSE)
}
return(
if (missing(colname)){
last_list
}
else if (length(colname)<2) {
genelist
}
else {genelist1}
)
}
heyhey<-commonUnique(all1)
View(heyhey)
commonUnique <- function(genes1, colname){
genes1<-data.table(genes1)
genelist<-genes1[, ..colname]
collist<-c(colnames(genes1))
collist<-collist[-which(collist %in% colname)]
genelist1<-Reduce(intersect, genelist)
for (i in collist){
if (length(colname) < 2){
genelist<-genelist[!which(genelist[[colname]] %in% genes1[[i]]),]
}
else {
genelist1<-genelist1[-which(genelist1 %in% genes1[[i]])]
}
}
genelist1<-data.frame(commons = genelist1, stringsAsFactors = FALSE)
return(
if (length(colname)<2) {
genelist
}
else {genelist1}
)
}
why<-commonUnique(all1, "cilia_carta")
why$cilia_carta[which(why$cilia_carta %in% heyhey$cilia_carta)]
commonUnique <- function(genes1, colname){
if (missing(colname)){
n<-length(genes1)
lst<-lapply(0:(2^n-1), FUN=function(x) head(as.integer(intToBits(x)),n))
lst<-lst[-1]
colnamex<-colnames(genes1)
last_list<-data.frame(c(1,2,3))
ref2<-seq(1:length(genes1))
for (i in 1:length(lst)){
ref<-unlist(lst[[i]])
refx<-ref*ref2
colname<-colnamex[refx]
genes1<-data.table(genes1)
genelist<-genes1[, ..colname]
collist<-c(colnames(genes1))
collist<-collist[-which(collist %in% colname)]
genelist1<-Reduce(intersect, genelist)
for (i in collist){
if (length(colname) < 2){
genelist<-genelist[!which(genelist[[colname]] %in% genes1[[i]]),]
}
else {
genelist1<-genelist1[!(genelist1 %in% genes1[[i]])]
}
}
genelist1<-data.frame(commons = genelist1, stringsAsFactors = FALSE)
if (length(colname)<2) {
genelist<-data.frame(genelist, stringsAsFactors = FALSE)
genelist2<-genelist
}
else {genelist2<-genelist1}
colnames(genelist2)<-paste0(colname, collapse = "_")
last_list<-cbindX(last_list, genelist2)
}
return(last_list)
}
else {
genes1<-data.table(genes1)
genelist<-genes1[, ..colname]
collist<-c(colnames(genes1))
collist<-collist[-which(collist %in% colname)]
genelist1<-Reduce(intersect, genelist)
for (i in collist){
if (length(colname) < 2){
genelist<-genelist[!which(genelist[[colname]] %in% genes1[[i]]),]
}
else {
genelist1<-genelist1[!(genelist1 %in% genes1[[i]])]
}
}
genelist1<-data.frame(commons = genelist1, stringsAsFactors = FALSE)
}
return(
if (missing(colname)){
last_list
}
else if (length(colname)<2) {
genelist
}
else {genelist1}
)
}
why<-commonUnique(all1, "cilia_carta")
why<-commonUnique(all1, c("cilia_carta","human"))
why<-commonUnique(all1, c("human"))
why<-commonUnique(all1, c("negative_ciliary"))
View(all1)
genes<-all1
numofcol<-4
mgenes = as.matrix(genes)        #set as matrix#
allgenes = as.vector(mgenes)     #set as vector
unallgenes= unique(allgenes, incomparables = FALSE, MARGIN = 1,
fromLast = FALSE)    #Unique gene list
unallgenes = unallgenes[-which(unallgenes == "")]
munallgenes = as.matrix(unallgenes)
boo = matrix(nrow = length(munallgenes), ncol = numofcol)    #empty matrix
m = 1
for (m in 1:length(munallgenes))
{
k = 1
for (k in 1:numofcol)
{
i = 1
a = 0
for (i in 1:length(mgenes[,k]))
{
if (munallgenes[m] == mgenes[i,k])
{
a = a+1
}
i = i+1
}
if (a > 0)
{
boo[m,k] = 1
}
else
{
boo[m,k] = 0
}
k = k+1
}
m = m+1
}
bood <- as.data.frame(boo)
colnames(bood) = colnames(mgenes)
rownames(bood) = munallgenes[,1]
View(bood)
axax<-bood[which(bood$cilia_carta == 1),2]
axax<-bood[which((bood$cilia_carta == 1) & (bood[,c(1,3,4)] == 0)),2]
axax<-bood[which((bood$cilia_carta == 1) && (bood[,c(1,3,4)] == 0)),2]
axax<-bood %>% filter(human == 0) %>%
filter(cilia_carta == 1) %>%
filter(gold_standard == 0) %>%
filter(negative_ciliary == 0)
View(axax)
axax1<-rownames(axax1)
axax1<-rownames(axax)
ayay1<-heyhey$cilia_carta
ayay1<-na.omit(ayay1)
ayay1[!(ayay1 %in% axax1)]
ayay1[(ayay1 %in% axax1)]
length(unique(axax1))
length(unique(ayay1))
duplicated(ayay1)
ayay1[duplicated(ayay1)]
commonUnique <- function(genes1, colname){
if (missing(colname)){
n<-length(genes1)
lst<-lapply(0:(2^n-1), FUN=function(x) head(as.integer(intToBits(x)),n))
lst<-lst[-1]
colnamex<-colnames(genes1)
last_list<-data.frame(c(1,2,3))
ref2<-seq(1:length(genes1))
for (i in 1:length(lst)){
ref<-unlist(lst[[i]])
refx<-ref*ref2
colname<-colnamex[refx]
genes1<-data.table(genes1)
genelist<-genes1[, ..colname]
collist<-c(colnames(genes1))
collist<-collist[-which(collist %in% colname)]
genelist1<-Reduce(intersect, genelist)
for (i in collist){
if (length(colname) < 2){
genelist<-genelist[!which(genelist[[colname]] %in% genes1[[i]]),]
}
else {
genelist1<-genelist1[!(genelist1 %in% genes1[[i]])]
}
}
genelist1<-data.frame(commons = genelist1, stringsAsFactors = FALSE)
if (length(colname)<2) {
genelist<-data.frame(genelist, stringsAsFactors = FALSE)
genelist2<-genelist
}
else {genelist2<-genelist1}
genelist2<-unique(genelist2)
colnames(genelist2)<-paste0(colname, collapse = "_")
last_list<-cbindX(last_list, genelist2)
}
return(last_list)
}
else {
genes1<-data.table(genes1)
genelist<-genes1[, ..colname]
collist<-c(colnames(genes1))
collist<-collist[-which(collist %in% colname)]
genelist1<-Reduce(intersect, genelist)
for (i in collist){
if (length(colname) < 2){
genelist<-genelist[!which(genelist[[colname]] %in% genes1[[i]]),]
}
else {
genelist1<-genelist1[!(genelist1 %in% genes1[[i]])]
}
}
genelist1<-data.frame(commons = genelist1, stringsAsFactors = FALSE)
}
return(
if (length(colname)<2) {
genelist
}
else {genelist1}
)
}
ayay2<-commonUnique(all1)
View(ayay2)
length(unique(ayay2$cilia_carta))
length(unique(ayay2$cilia_carta))
length(unique(ayay2[!is.na(ayay2$cilia_carta)]))
length(unique(ayay2[!is.na(ayay2$cilia_carta),]))
length(unique(ayay2$cilia_carta[!is.na(ayay2$cilia_carta)]))
commonUnique <- function(genes1, colname){
if (missing(colname)){
n<-length(genes1)
lst<-lapply(0:(2^n-1), FUN=function(x) head(as.integer(intToBits(x)),n))
lst<-lst[-1]
colnamex<-colnames(genes1)
last_list<-data.frame(c(1,2,3))
ref2<-seq(1:length(genes1))
for (i in 1:length(lst)){
ref<-unlist(lst[[i]])
refx<-ref*ref2
colname<-colnamex[refx]
genes1<-data.table(genes1)
genelist<-genes1[, ..colname]
collist<-c(colnames(genes1))
collist<-collist[-which(collist %in% colname)]
genelist1<-Reduce(intersect, genelist)
for (i in collist){
if (length(colname) < 2){
genelist<-genelist[!which(genelist[[colname]] %in% genes1[[i]]),]
}
else {
genelist1<-genelist1[!(genelist1 %in% genes1[[i]])]
}
}
genelist1<-data.frame(commons = genelist1, stringsAsFactors = FALSE)
if (length(colname)<2) {
genelist<-data.frame(genelist, stringsAsFactors = FALSE)
genelist2<-genelist
}
else {genelist2<-genelist1}
genelist2[,1]<-unique(genelist2[,1])
colnames(genelist2)<-paste0(colname, collapse = "_")
last_list<-cbindX(last_list, genelist2)
}
return(last_list)
}
else {
genes1<-data.table(genes1)
genelist<-genes1[, ..colname]
collist<-c(colnames(genes1))
collist<-collist[-which(collist %in% colname)]
genelist1<-Reduce(intersect, genelist)
for (i in collist){
if (length(colname) < 2){
genelist<-genelist[!which(genelist[[colname]] %in% genes1[[i]]),]
}
else {
genelist1<-genelist1[!(genelist1 %in% genes1[[i]])]
}
}
genelist1<-data.frame(commons = genelist1, stringsAsFactors = FALSE)
}
return(
if (length(colname)<2) {
genelist
}
else {genelist1}
)
}
ayay2<-commonUnique(all1)
commonUnique <- function(genes1, colname){
if (missing(colname)){
n<-length(genes1)
lst<-lapply(0:(2^n-1), FUN=function(x) head(as.integer(intToBits(x)),n))
lst<-lst[-1]
colnamex<-colnames(genes1)
last_list<-data.frame(c(1,2,3))
ref2<-seq(1:length(genes1))
for (i in 1:length(lst)){
ref<-unlist(lst[[i]])
refx<-ref*ref2
colname<-colnamex[refx]
genes1<-data.table(genes1)
genelist<-genes1[, ..colname]
collist<-c(colnames(genes1))
collist<-collist[-which(collist %in% colname)]
genelist1<-Reduce(intersect, genelist)
for (i in collist){
if (length(colname) < 2){
genelist<-genelist[!which(genelist[[colname]] %in% genes1[[i]]),]
}
else {
genelist1<-genelist1[!(genelist1 %in% genes1[[i]])]
}
}
genelist1<-data.frame(commons = unique(genelist1), stringsAsFactors = FALSE)
if (length(colname)<2) {
genelist2<-data.frame(unique(genelist), stringsAsFactors = FALSE)
}
else {genelist2<-genelist1}
colnames(genelist2)<-paste0(colname, collapse = "_")
last_list<-cbindX(last_list, genelist2)
}
return(last_list)
}
else {
genes1<-data.table(genes1)
genelist<-genes1[, ..colname]
collist<-c(colnames(genes1))
collist<-collist[-which(collist %in% colname)]
genelist1<-Reduce(intersect, genelist)
for (i in collist){
if (length(colname) < 2){
genelist<-genelist[!which(genelist[[colname]] %in% genes1[[i]]),]
}
else {
genelist1<-genelist1[!(genelist1 %in% genes1[[i]])]
}
}
genelist1<-data.frame(commons = genelist1, stringsAsFactors = FALSE)
}
return(
if (length(colname)<2) {
genelist
}
else {genelist1}
)
}
ayay2<-commonUnique(all1)
View(ayay2)
commonUnique <- function(genes1, colname){
if (missing(colname)){
n<-length(genes1)
lst<-lapply(0:(2^n-1), FUN=function(x) head(as.integer(intToBits(x)),n))
lst<-lst[-1]
colnamex<-colnames(genes1)
last_list<-data.frame(c(1,2,3))
ref2<-seq(1:length(genes1))
for (i in 1:length(lst)){
ref<-unlist(lst[[i]])
refx<-ref*ref2
colname<-colnamex[refx]
genes1<-data.table(genes1)
genelist<-genes1[, ..colname]
collist<-c(colnames(genes1))
collist<-collist[-which(collist %in% colname)]
genelist1<-Reduce(intersect, genelist)
for (i in collist){
if (length(colname) < 2){
genelist<-genelist[!which(genelist[[colname]] %in% genes1[[i]]),]
}
else {
genelist1<-genelist1[!(genelist1 %in% genes1[[i]])]
}
}
genelist1<-data.frame(commons = unique(genelist1), stringsAsFactors = FALSE)
if (length(colname)<2) {
genelist2<-data.frame(unique(genelist), stringsAsFactors = FALSE)
}
else {genelist2<-genelist1}
colnames(genelist2)<-paste0(colname, collapse = "_")
last_list<-cbindX(last_list, genelist2)
}
last_list<-last_list[,-1]
return(last_list)
}
else {
genes1<-data.table(genes1)
genelist<-genes1[, ..colname]
collist<-c(colnames(genes1))
collist<-collist[-which(collist %in% colname)]
genelist1<-Reduce(intersect, genelist)
for (i in collist){
if (length(colname) < 2){
genelist<-genelist[!which(genelist[[colname]] %in% genes1[[i]]),]
}
else {
genelist1<-genelist1[!(genelist1 %in% genes1[[i]])]
}
}
genelist1<-data.frame(commons = genelist1, stringsAsFactors = FALSE)
}
return(
if (length(colname)<2) {
genelist
}
else {genelist1}
)
}
ayay2<-commonUnique(all1)
View(ayay2)
human_mouse_celegans<-commonUnique(allciliary)
human_mouse_celegans<-commonUnique(allciliary)
human_mouse_celegans<-replace(human_mouse_celegans, is.na(human_mouse_celegans), "")
write.table(human_mouse_celegans, "./data/human_mouse_celegans.csv", sep = ",", row.names = FALSE, quote = FALSE)
human<-commonUnique(all1)
human<-replace(human, is.na(human), "")
write.table(human, "./data/human.csv", sep = ",", row.names = FALSE, quote = FALSE)
mouse<-commonUnique(all2)
mouse<-replace(mouse, is.na(mouse), "")
write.table(mouse, "./data/mouse.csv", sep = ",", row.names = FALSE, quote = FALSE)
celegans<-commonUnique(all3)
celegans<-replace(celegans, is.na(celegans), "")
write.table(celegans, "./data/celegans.csv", sep = ",", row.names = FALSE, quote = FALSE)
all<-commonUnique(all4)
all<-replace(all, is.na(all), "")
write.table(all, "./data/all.csv", sep = ",", row.names = FALSE, quote = FALSE)
